// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library that supports various program execution services.
 */
class Sys {
    static int delayFactor;
    /** Performs all the initializations required by the OS. */
    function void init() {
        do Math.init();
        do Memory.init();
        do Screen.init();
        do Keyboard.init();
        do Output.init();
        do Main.main();
        let delayFactor = 32767;
        return;
    }

    /** Halts the program execution. */
    function void halt() {
        while(true){}
        return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    // Assuming the programs run in fast execution mode
    // I have tried setting the number of operations to be executed in the wait function to duration*(32767)^26 and it was not even close to 2 seconds
    // So falling back to the number of operations to be durations*32767
        function void wait(int duration) {
        var int i,j;
        let i = 0;
        while (i < (duration)) {
            let j = 0;
            while (j < delayFactor) {
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
        do Output.printString("ERR");
        do Output.printInt(errorCode);
        do Sys.halt();
        return;
    }
}
